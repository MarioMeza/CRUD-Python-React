{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mario.meza\\\\Desktop\\\\python-react-crud\\\\frontend\\\\src\\\\components\\\\Users.js\";\nimport React, { useState, useEffect } from 'react';\nconst API = process.env.REACT_APP_API;\nexport const Users = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n  const [id, setId] = useState(\"\");\n  let [users, setUsers] = useState([]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!editing) {\n      const res = await fetch(`${API}/users`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      console.log(data);\n    } else {\n      const res = await fetch(`${API}/users/$`);\n    }\n\n    await getUsers(); //trae de nuevo los datos, compara en que han cambiado y refesca la pagina automatiamente\n\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const getUsers = async () => {\n    const res = await fetch(`${API}/users`);\n    const data = await res.json();\n    setUsers(data);\n    console.log(data);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const editUser = async id => {\n    const res = await fetch(`${API}/user/${id}`);\n    const data = await res.json();\n    setEditing(true);\n    setId(id); //console.log(data)\n\n    setName(data.name);\n    setEmail(data.email);\n    setPassword(data.password);\n  };\n\n  const deleteUser = async id => {\n    const userResponse = window.confirm('Are you sure want to delete it?');\n\n    if (userResponse) {\n      //console.log(id)\n      const res = await fetch(`${API}/users/${id}`, {\n        method: 'DELETE'\n      });\n      const data = await res.json();\n      console.log(data);\n      await getUsers(); //trae de nuevo los datos, compara en que han cambiado y refesca la pagina automatiamente\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"di\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"card card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setName(e.target.value),\n    value: name,\n    className: \"form-control\",\n    placeholder: \"Name\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    onChange: e => setEmail(e.target.value),\n    value: email,\n    className: \"form-control\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    value: password,\n    className: \"form-control\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Create\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Operations\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, users.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n    key: user._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, user.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, user.password), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-secondary btn-sm btn-block\",\n    onClick: e => editUser(user._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger btn-sm btn-block\",\n    onClick: e => deleteUser(user._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, \"Delete\"))))))));\n};","map":{"version":3,"sources":["C:/Users/mario.meza/Desktop/python-react-crud/frontend/src/components/Users.js"],"names":["React","useState","useEffect","API","process","env","REACT_APP_API","Users","name","setName","email","setEmail","password","setPassword","editing","setEditing","id","setId","users","setUsers","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","getUsers","editUser","deleteUser","userResponse","window","confirm","target","value","map","user","_id"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\r\n\r\nconst API = process.env.REACT_APP_API;\r\n\r\nexport const Users = () => {\r\n    const[name, setName] = useState(\"\");\r\n    const[email, setEmail] = useState(\"\");\r\n    const[password, setPassword] = useState(\"\");\r\n    const[editing, setEditing] = useState(false);\r\n    const[id, setId] = useState(\"\");\r\n    let [users, setUsers] = useState([]);\r\n\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        if(!editing){\r\n            const res = await fetch(`${API}/users`, {\r\n                method: \"POST\",\r\n                headers:{\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password\r\n                }),\r\n            });\r\n            const data = await res.json();\r\n            console.log(data)\r\n        }else{\r\n            const res = await fetch(`${API}/users/$`)\r\n        }\r\n\r\n        await getUsers();//trae de nuevo los datos, compara en que han cambiado y refesca la pagina automatiamente\r\n        setName('');\r\n        setEmail('');\r\n        setPassword('');\r\n    }\r\n\r\n    const getUsers = async () =>{\r\n       const res =  await fetch(`${API}/users`)\r\n       const data = await res.json();\r\n       setUsers(data);\r\n       console.log(data)\r\n    }\r\n    useEffect(()=>{\r\n        getUsers();\r\n    }, [])\r\n\r\n    const editUser = async (id) =>{\r\n        const res = await fetch(`${API}/user/${id}`)\r\n        const data = await res.json();\r\n\r\n        setEditing(true);\r\n        setId(id)\r\n        //console.log(data)\r\n        setName(data.name)\r\n        setEmail(data.email)\r\n        setPassword(data.password)\r\n    }\r\n\r\n    const deleteUser = async (id) =>{\r\n        const userResponse =  window.confirm('Are you sure want to delete it?')\r\n        if(userResponse){\r\n            //console.log(id)\r\n            const res = await fetch(`${API}/users/${id}`, {\r\n                method: 'DELETE'\r\n            })\r\n            const data = await res.json();\r\n            console.log(data)\r\n            await getUsers();//trae de nuevo los datos, compara en que han cambiado y refesca la pagina automatiamente\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <di className=\"col-md-4\">\r\n                <form onSubmit={handleSubmit} className=\"card card-body\">\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" \r\n                            onChange={e => setName(e.target.value)} \r\n                            value={name} \r\n                            className=\"form-control\"\r\n                            placeholder=\"Name\"\r\n                            autoFocus\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"email\" \r\n                            onChange={e => setEmail(e.target.value)} \r\n                            value={email} \r\n                            className=\"form-control\"\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" \r\n                            onChange={e => setPassword(e.target.value)} \r\n                            value={password} \r\n                            className=\"form-control\"\r\n                            placeholder=\"Password\"\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn btn-primary btn-block\">\r\n                        Create\r\n                    </button>\r\n                </form>\r\n            </di>\r\n            <div className=\"col-md-6\">\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Password</th>\r\n                        <th>Operations</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user) =>(\r\n                        <tr key={user._id}>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.password}</td>\r\n                            <td>\r\n                                <button className=\"btn btn-secondary btn-sm btn-block\" onClick={(e) => editUser(user._id)}>Edit</button>\r\n                                <button className=\"btn btn-danger btn-sm btn-block\" onClick={(e) => deleteUser(user._id)}>Delete</button>  \r\n                            </td>                           \r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}